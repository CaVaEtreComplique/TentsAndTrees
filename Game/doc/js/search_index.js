var search_data = {"index":{"searchIndex":["adventuresession","adventurevictoryscreen","alltreeshavetentshelper","asset","button","cell","cellasset","cellassets","celldonttouchtreehelper","celltouchatenthelper","cellui","cellwhiteoverlap","choixdiffscreen","chronoui","clueui","compressegrid","connectdb","connexion","count","diapo","difficulty","fictivhelper","findwhitezone","game","gamedivised","gamemodescreen","gamescreen","gamemode","grid","gridgenerator","gridui","guess","guessui","help","helpallgrassonacolumn","helpallgrassonarow","helpallpossibilitiesgiveitcolumn","helpallpossibilitiesgiveitrow","helpalltentsonacolumn","helpalltentsonarow","helpcelltoofaroftrees","helpcellsandcolumns","helpcellsandrows","helpcellsandrowsorcolumns","helpnotfound","helpon1cell","helpon2cells","helpon3cells","helponacelltouchatent","helponacolumn","helponcells","helponrowsandcolumn","helponerow","helpui","helper","helpson2celltentuniquesolution","helpson2cellsgrasslinkedtree","helpsonacellistentbecauseoftree","helpsonacelloverlap","highscore","highscoresscreen","iconasset","levelnumber","levelnumbers","levelselectionscreen","levels","loadingscreen","motdepasseoublie","moves","object","parametrescreen","pausescreen","player","principalscreen","probleme","problemeident","processstatus","quickplaysession","rowsandcolumnsfindgrass","rowsandcolumnsfindtent","rowsandcolumnsgrasshelper","rowsandcolumnstentshelper","rulescreen","save","saveblockui","savedb","savescreen","screen","scrollablearea","selectionui","session","star","testgame","text","timeattacksession","tutorialgamescreen","tutorialsession","tutorialvictoryscreen","uimanager","victoryscreen","xmlreader","==()","==()","==()","==()","==()","==()","==()","==()","add()","add()","add()","addhighscore()","applyon()","applyon()","birotative?()","buttonmaxstring()","calculateoverallstars()","calculateoverallstars()","calculatescore()","calculatescore()","calculatescore()","calculatescore()","calculatescore()","calculatescore()","calculatestars()","calculatestars()","cellat()","cellslist()","cellslist()","cellslist()","cellslist()","cellslist()","cellslist()","cellslist()","cellslist()","cellslist()","clearredo()","compresse()","connexion()","continuable?()","continuable?()","continuable?()","continuable?()","continuable?()","copyfrozen()","count()","createplayer()","createsave()","deleteplayer()","deleteplayerhg()","deleteplayersave()","deletesave()","deletesave()","destroy()","dragleftchange()","each()","find()","findfirst()","frozenof()","getbuttonlabel()","gethelpstexts()","gethighscoresbygamemodediff()","getjoueur()","getlanguages()","getlevel()","getlevel()","getlevelinformation()","getlevelmaxstars()","getloadingmessages()","getplayer()","getplayerhighscorebygamemodediff()","getplayerssave()","getres()","getrules()","getsavebyid()","getscreentexts()","gettext()","gettext()","gettext()","gettext()","gettext()","gettext()","gettext()","gettext()","gettext()","gettext()","gettext()","gettext()","gettext()","gettext()","gettutorialtexts()","getvisualrankcolumn()","getvisualrankrow()","gotonextstep()","gridaltered()","help()","help()","help()","help()","help()","help()","help()","help()","help()","help()","helpdisplayed?()","helpfound?()","helpfound?()","iconasset()","initlevel()","isagrass?()","isatent?()","isatree?()","isawhite?()","isplayerexist()","istutorial?()","istutorial?()","istutorial?()","load()","load()","lvlavailable?()","lvlavailable?()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","onclick()","ondestroy()","ondestroy()","parce()","partofadventure?()","playerconnect()","playerupdate()","price()","price()","primarychange()","primaryunchange()","recive()","redo()","refresh()","refresh()","refresh()","refreshoverallstar()","replay()","replay()","replay()","require_all()","research()","resize()","send()","setfreezersonclick()","setgridonclick()","sethelponclick()","setpauseonclick()","setredoonclick()","setresetonclick()","setsave()","settime()","settime()","settime()","settime()","setundoonclick()","show()","to_s()","to_s()","undo()","update()","update()","updatehighscore()","updatelabel()","updatelabel()","updateoverallstarshash()","updatesave()","updatesave()"],"longSearchIndex":["adventuresession","adventurevictoryscreen","alltreeshavetentshelper","asset","button","cell","cellasset","cellassets","celldonttouchtreehelper","celltouchatenthelper","cellui","cellwhiteoverlap","choixdiffscreen","chronoui","clueui","compressegrid","connectdb","connexion","count","diapo","difficulty","fictivhelper","findwhitezone","game","gamedivised","gamemodescreen","gamescreen","gamemode","grid","gridgenerator","gridui","guess","guessui","help","helpallgrassonacolumn","helpallgrassonarow","helpallpossibilitiesgiveitcolumn","helpallpossibilitiesgiveitrow","helpalltentsonacolumn","helpalltentsonarow","helpcelltoofaroftrees","helpcellsandcolumns","helpcellsandrows","helpcellsandrowsorcolumns","helpnotfound","helpon1cell","helpon2cells","helpon3cells","helponacelltouchatent","helponacolumn","helponcells","helponrowsandcolumn","helponerow","helpui","helper","helpson2celltentuniquesolution","helpson2cellsgrasslinkedtree","helpsonacellistentbecauseoftree","helpsonacelloverlap","highscore","highscoresscreen","iconasset","levelnumber","levelnumbers","levelselectionscreen","levels","loadingscreen","motdepasseoublie","moves","object","parametrescreen","pausescreen","player","principalscreen","probleme","problemeident","processstatus","quickplaysession","rowsandcolumnsfindgrass","rowsandcolumnsfindtent","rowsandcolumnsgrasshelper","rowsandcolumnstentshelper","rulescreen","save","saveblockui","savedb","savescreen","screen","scrollablearea","selectionui","session","star","testgame","text","timeattacksession","tutorialgamescreen","tutorialsession","tutorialvictoryscreen","uimanager","victoryscreen","xmlreader","cell#==()","grid#==()","help#==()","helpcellsandrowsorcolumns#==()","helpon2cells#==()","helpon3cells#==()","helponcells#==()","helponrowsandcolumn#==()","moves#add()","processstatus::add()","scrollablearea#add()","connectdb#addhighscore()","asset#applyon()","levelselectionscreen#applyon()","cell#birotative?()","xmlreader#buttonmaxstring()","adventuresession#calculateoverallstars()","levels#calculateoverallstars()","adventuresession#calculatescore()","levels#calculatescore()","quickplaysession#calculatescore()","session#calculatescore()","timeattacksession#calculatescore()","tutorialsession#calculatescore()","adventuresession#calculatestars()","levels#calculatestars()","grid#cellat()","help#cellslist()","helpcellsandcolumns#cellslist()","helpcellsandrows#cellslist()","helpcellsandrowsorcolumns#cellslist()","helpon2cells#cellslist()","helpon3cells#cellslist()","helponacolumn#cellslist()","helponcells#cellslist()","helponerow#cellslist()","moves#clearredo()","compressegrid::compresse()","connexion::connexion()","adventuresession#continuable?()","levels#continuable?()","session#continuable?()","timeattacksession#continuable?()","tutorialsession#continuable?()","grid#copyfrozen()","count::count()","connectdb#createplayer()","session#createsave()","connectdb#deleteplayer()","connectdb#deleteplayerhg()","connectdb#deleteplayersave()","connectdb#deletesave()","session#deletesave()","save#destroy()","cell#dragleftchange()","grid#each()","findwhitezone::find()","count::findfirst()","cell#frozenof()","xmlreader#getbuttonlabel()","xmlreader#gethelpstexts()","connectdb#gethighscoresbygamemodediff()","connexion::getjoueur()","xmlreader#getlanguages()","adventuresession#getlevel()","levels#getlevel()","adventuresession#getlevelinformation()","levels#getlevelmaxstars()","xmlreader#getloadingmessages()","connectdb#getplayer()","connectdb#getplayerhighscorebygamemodediff()","connectdb#getplayerssave()","help#getres()","xmlreader#getrules()","connectdb#getsavebyid()","xmlreader#getscreentexts()","help#gettext()","helpallgrassonacolumn#gettext()","helpallgrassonarow#gettext()","helpallpossibilitiesgiveitcolumn#gettext()","helpallpossibilitiesgiveitrow#gettext()","helpalltentsonacolumn#gettext()","helpalltentsonarow#gettext()","helpcelltoofaroftrees#gettext()","helpnotfound#gettext()","helponacelltouchatent#gettext()","helpson2celltentuniquesolution#gettext()","helpson2cellsgrasslinkedtree#gettext()","helpsonacellistentbecauseoftree#gettext()","helpsonacelloverlap#gettext()","xmlreader#gettutorialtexts()","cell#getvisualrankcolumn()","cell#getvisualrankrow()","tutorialgamescreen#gotonextstep()","tutorialgamescreen#gridaltered()","alltreeshavetentshelper#help()","celldonttouchtreehelper#help()","celltouchatenthelper#help()","cellwhiteoverlap#help()","fictivhelper#help()","helper#help()","rowsandcolumnsfindgrass#help()","rowsandcolumnsfindtent#help()","rowsandcolumnsgrasshelper#help()","rowsandcolumnstentshelper#help()","tutorialgamescreen#helpdisplayed?()","help#helpfound?()","helpnotfound#helpfound?()","iconasset#iconasset()","levels#initlevel()","cell#isagrass?()","cell#isatent?()","cell#isatree?()","cell#isawhite?()","connectdb#isplayerexist()","quickplaysession#istutorial?()","session#istutorial?()","tutorialsession#istutorial?()","save::load()","save#load()","adventuresession#lvlavailable?()","levels#lvlavailable?()","adventuresession::new()","asset::new()","button::new()","cell::new()","chronoui::new()","connectdb::new()","connexion::new()","difficulty::new()","gamedivised::new()","gamemode::new()","grid::new()","help::new()","helpallpossibilitiesgiveitcolumn::new()","helpallpossibilitiesgiveitrow::new()","helpcelltoofaroftrees::new()","helpcellsandcolumns::new()","helpcellsandrows::new()","helpcellsandrowsorcolumns::new()","helpnotfound::new()","helpon2cells::new()","helpon3cells::new()","helponacelltouchatent::new()","helponcells::new()","helponrowsandcolumn::new()","helpson2celltentuniquesolution::new()","helpson2cellsgrasslinkedtree::new()","helpsonacellistentbecauseoftree::new()","helpsonacelloverlap::new()","highscore::new()","highscoresscreen::new()","iconasset::new()","levelnumber::new()","levelnumbers::new()","levelselectionscreen::new()","levels::new()","motdepasseoublie::new()","moves::new()","player::new()","probleme::new()","problemeident::new()","processstatus::new()","quickplaysession::new()","save::new()","saveblockui::new()","savedb::new()","savescreen::new()","scrollablearea::new()","session::new()","star::new()","timeattacksession::new()","tutorialgamescreen::new()","tutorialsession::new()","xmlreader::new()","button#onclick()","probleme#ondestroy()","problemeident#ondestroy()","chronoui#parce()","session#partofadventure?()","connectdb#playerconnect()","connectdb#playerupdate()","help#price()","helper#price()","cell#primarychange()","cell#primaryunchange()","processstatus#recive()","moves#redo()","levelnumber#refresh()","levelnumbers#refresh()","star#refresh()","levelselectionscreen#refreshoverallstar()","adventuresession#replay()","moves#replay()","session#replay()","object#require_all()","alltreeshavetentshelper#research()","asset#resize()","processstatus::send()","tutorialgamescreen#setfreezersonclick()","tutorialgamescreen#setgridonclick()","tutorialgamescreen#sethelponclick()","tutorialgamescreen#setpauseonclick()","tutorialgamescreen#setredoonclick()","tutorialgamescreen#setresetonclick()","session#setsave()","quickplaysession#settime()","session#settime()","timeattacksession#settime()","tutorialsession#settime()","tutorialgamescreen#setundoonclick()","connexion::show()","cell#to_s()","help#to_s()","moves#undo()","save::update()","tutorialgamescreen#update()","connectdb#updatehighscore()","button#updatelabel()","chronoui#updatelabel()","adventuresession#updateoverallstarshash()","connectdb#updatesave()","session#updatesave()"],"info":[["AdventureSession","","AdventureSession.html","","<p>Presentation\n<p>This class is inherited from Session. The AdventureSession is the session that will be saved …\n"],["AdventureVictoryScreen","","AdventureVictoryScreen.html","","<p>404\n<p>This class was not commented in the first place, so it can not be documented.\n"],["AllTreesHaveTentsHelper","","AllTreesHaveTentsHelper.html","","<p>Presentation\n<p>The AllTreesHaveTentsHelper class is a helper class inherited from FictivHelper. Its role …\n"],["Asset","","Asset.html","","<p>Presentation\n<p>Asset is an abstract class needed to create and use all of the images from the game. It creates …\n"],["Button","","Button.html","","<p>Presentation\n<p>The Button class implements how every button in the game should work.\n<p>Methods\n"],["Cell","","Cell.html","","<p>Presentation\n<p>The Cell class is the core class of every cell in the game.\n<p>Variables\n"],["CellAsset","","CellAsset.html","","<p>404\n<p>This class was not commented in the first place, so it can not be documented.\n"],["CellAssets","","CellAssets.html","","<p>404\n<p>This class was not commented in the first place, so it can not be documented.\n"],["CellDontTouchTreeHelper","","CellDontTouchTreeHelper.html","","<p>Presentation\n<p>The CellDontTouchTreeHelper class is a helper class inherited from FictivHelper. Its role …\n"],["CellTouchATentHelper","","CellTouchATentHelper.html","","<p>Presentation\n<p>The CellTouchATentHelper class is a helper class inherited from FictivHelper. Its role is …\n"],["CellUi","","CellUi.html","","<p>404\n<p>This class was not commented in the first place, so it can not be documented.\n"],["CellWhiteOverlap","","CellWhiteOverlap.html","","<p>Presentation\n<p>The CellWhiteOverlap class is a helper class inherited from FictivHelper. Its role is to …\n"],["ChoixDiffScreen","","ChoixDiffScreen.html","","<p>Presentation\n<p>ChoixDiffScreen is an inherited class from the Screen class. This class only needs to be …\n"],["ChronoUi","","ChronoUi.html","","<p>Presentation\n<p>The ChronoUI class is inherited from the Text class and manages the in-game chronometer. …\n"],["ClueUi","","ClueUi.html","","<p>404\n<p>This class was not commented in the first place, so it can not be documented.\n"],["CompresseGrid","","CompresseGrid.html","","<p>Presentation\n<p>The CompresseGrid class gives an extended method for the Game class.\n<p>Methods\n"],["ConnectDB","","ConnectDB.html","","<p>Presentation\n<p>The ConnectDB class is the main database class and the only one that can reach it. Its methods …\n"],["Connexion","","Connexion.html","","<p>Presentation\n<p>The Connexion class is the main class of the project.\n<p>Instance variables\n"],["Count","","Count.html","","<p>Presentation\n<p>The Count class gives some extended methods to the Game class.\n<p>Methods\n"],["Diapo","","Diapo.html","","<p>404\n<p>This class was not commented in the first place, so it can not be documented.\n"],["Difficulty","","Difficulty.html","","<p>Presentation\n<p>The Difficulty class is here to represent a difficulty in the database. A Difficulty is represented …\n"],["FictivHelper","","FictivHelper.html","","<p>Presentation\n<p>The FictivHelper class is a fictive helper class. Its role is to say that all the helper …\n"],["FindWhiteZone","","FindWhiteZone.html","","<p>Presentation\n<p>The FindWhiteZone class is an extended method from the Game class.\n<p>Methods\n"],["Game","","Game.html","","<p>404\n<p>This class was not commented in the first place, so it can not be documented.\n"],["GameDivised","","GameDivised.html","","<p>Presentation\n<p>The GameDivised class represents the grid from the Game class as four smaller grids, with …\n"],["GameModeScreen","","GameModeScreen.html","","<p>Presentation\n<p>GameModeScreen is an inherited class from the Screen class. This class only needs to be initialized …\n"],["GameScreen","","GameScreen.html","","<p>404\n<p>This class was not commented in the first place, so it can not be documented.\n"],["Gamemode","","Gamemode.html","","<p>Presentation\n<p>This method is used to represent a game mode in the database. A Gamemode is defined by its …\n"],["Grid","","Grid.html","","<p>Presentation\n<p>The Grid class is the core of all the grids in the game.\n<p>Variables\n"],["GridGenerator","","GridGenerator.html","","<p>404\n<p>This class was not commented in the first place, so it can not be documented.\n"],["GridUi","","GridUi.html","","<p>404\n<p>This class was not commented in the first place, so it can not be documented.\n"],["Guess","","Guess.html","","<p>404\n<p>This class was not commented in the first place, so it can not be documented.\n"],["GuessUi","","GuessUi.html","","<p>404\n<p>This class was not commented in the first place, so it can not be documented.\n"],["Help","","Help.html","","<p>Presentation\n<p>The help class is an abstract class. It is the general parent of all the other help classes …\n"],["HelpAllGrassOnAColumn","","HelpAllGrassOnAColumn.html","","<p>Presentation\n<p>The HelpAllGrassOnAColumn class is inherited from the HelpOnAColumn abstract class. It is …\n"],["HelpAllGrassOnARow","","HelpAllGrassOnARow.html","","<p>Presentation\n<p>The HelpAllGrassOnARow class is inherited from the HelpOneRow abstract class. It is used …\n"],["HelpAllPossibilitiesGiveItColumn","","HelpAllPossibilitiesGiveItColumn.html","","<p>Presentation\n<p>The HelpAllPossibilitiesGiveItColumn class is inherited from the HelpCellsAndColumns class …\n"],["HelpAllPossibilitiesGiveItRow","","HelpAllPossibilitiesGiveItRow.html","","<p>Presentation\n<p>The HelpAllPossibilitiesGiveItRow class is inherited from the HelpCellsAndRows class and …\n"],["HelpAllTentsOnAColumn","","HelpAllTentsOnAColumn.html","","<p>Presentation\n<p>The HelpAllTentsOnAColumn class is inherited from the HelpOnAColumn abstract class. It is …\n"],["HelpAllTentsOnARow","","HelpAllTentsOnARow.html","","<p>Presentation\n<p>The HelpAllTentsOnARow class is inherited from the HelpOneRow abstract class. It is used …\n"],["HelpCellTooFarOfTrees","","HelpCellTooFarOfTrees.html","","<p>Presentation\n<p>The HelpCellTooFarOfTrees class is inherited from the HelpOn1Cell class. This class is used …\n"],["HelpCellsAndColumns","","HelpCellsAndColumns.html","","<p>Presentation\n<p>The HelpCellsAndColumns class is an abstract class inherited from the abstract class HelpCellsAndRowsOrColumns …\n"],["HelpCellsAndRows","","HelpCellsAndRows.html","","<p>Presentation\n<p>The HelpCellsAndRows class is an abstract class inherited from the abstract class HelpCellsAndRowsOrColumns …\n"],["HelpCellsAndRowsOrColumns","","HelpCellsAndRowsOrColumns.html","","<p>Presentation\n<p>The HelpCellsAndRowsOrColumns is an abstract class inherited from the Help class and it will …\n"],["HelpNotFound","","HelpNotFound.html","","<p>Presentation\n<p>The HelpNotFound class is inherited from the Help class. This class is instanciated when …\n"],["HelpOn1Cell","","HelpOn1Cell.html","","<p>Presentation\n<p>The HelpOn1Cell class is inherited from the HelpOnCells class and its only direct child is …\n"],["HelpOn2Cells","","HelpOn2Cells.html","","<p>Presentation\n<p>The HelpOn2Cells class is an abstract class inherited from HelpOnCells. Its direct children …\n"],["HelpOn3Cells","","HelpOn3Cells.html","","<p>Presentation\n<p>The HelpOn3Cells class is an abstract class inherited from HelpOnCells. Its direct child …\n"],["HelpOnACellTouchATent","","HelpOnACellTouchATent.html","","<p>Presentation\n<p>The HelpOnACellTouchATent class is inherited from the HelpOn2Cells abstract class. It shows …\n"],["HelpOnAColumn","","HelpOnAColumn.html","","<p>Presentation\n<p>The HelpOnAColumn abstract class is inherited from the HelpOnRowsAndColumn abstract class …\n"],["HelpOnCells","","HelpOnCells.html","","<p>Presentation\n<p>The HelpOnCells class is inherited from the Help class and its direct children are HelpOn1Cell …\n"],["HelpOnRowsAndColumn","","HelpOnRowsAndColumn.html","","<p>Presentation\n<p>The HelpOnRowsAndColumn abstract class is inherited from the Help class and its direct children …\n"],["HelpOneRow","","HelpOneRow.html","","<p>Presentation\n<p>The HelpOneRow abstract class is inherited from the HelpOnRowsAndColumn abstract class and …\n"],["HelpUi","","HelpUi.html","","<p>404\n<p>This class was not commented in the first place, so it can not be documented.\n"],["Helper","","Helper.html","","<p>Presentation\n<p>The Helper class is a helper class inherited from FictivHelper. Its role is to help you finding …\n"],["HelpsOn2CellTentUniqueSolution","","HelpsOn2CellTentUniqueSolution.html","","<p>Presentation\n<p>The HelpsOn2CellTentUniqueSolution class is inherited from the HelpOn2Cells abstract class. …\n"],["HelpsOn2CellsGrassLinkedTree","","HelpsOn2CellsGrassLinkedTree.html","","<p>Presentation\n<p>The HelpsOn2CellsGrassLinkedTree class is inherited from the HelpOn2Cells abstract class. …\n"],["HelpsOnACellIsTentBecauseOfTree","","HelpsOnACellIsTentBecauseOfTree.html","","<p>Presentation\n<p>The HelpsOnACellIsTentBecauseOfTree class is inherited from the HelpOn2Cells abstract class. …\n"],["HelpsOnACellOverlap","","HelpsOnACellOverlap.html","","<p>Presentation\n<p>The HelpsOnACellOverlap class is inherited from the HelpOn3Cells abstract class. This class …\n"],["HighScore","","HighScore.html","","<p>Presentation\n<p>The HighScore class is here to represent a high score in the database.\n<p>Variables\n"],["HighScoresScreen","","HighScoresScreen.html","","<p>Presentation\n<p>HighScoresScreen is an inherited class from the Screen class. This class only needs to be …\n"],["IconAsset","","IconAsset.html","","<p>Presentation\n<p>The IconAsset class loads all the icons.\n<p>Methods\n"],["LevelNumber","","LevelNumber.html","","<p>Presentation\n<p>The LevelNumber class creates and implements the level number icon.\n<p>Methods\n"],["LevelNumbers","","LevelNumbers.html","","<p>Presentation\n<p>The LevelNumbers class creates and implements all the levels numbers icon.\n<p>Methods\n"],["LevelSelectionScreen","","LevelSelectionScreen.html","","<p>Presentation\n<p>LevelSelectionScreen is an inherited class from the Screen class. This class only needs to …\n"],["Levels","","Levels.html","","<p>Presentation\n<p>The Levels class is used to know all levels particularity. It is also used to do all of the …\n"],["LoadingScreen","","LoadingScreen.html","","<p>404\n<p>This class was not commented in the first place, so it can not be documented.\n"],["MotdepasseOublie","","MotdepasseOublie.html","","<p>Presentation\n<p>MotdepasseOublie only needs to be initialized. It creates and implements a pop-up window …\n"],["Moves","","Moves.html","","<p>Presentation\n<p>This class manages all the moves within the game, epecially the undo/redo function.\n<p>Methods …\n"],["Object","","Object.html","",""],["ParametreScreen","","ParametreScreen.html","","<p>Presentation\n<p>ParametreScreen is an inherited class from the Screen class. This class only needs to be …\n"],["PauseScreen","","PauseScreen.html","","<p>404\n<p>This class was not commented in the first place, so it can not be documented.\n"],["Player","","Player.html","","<p>Presentation\n<p>The Player class is here to represent a Player in the database.\n<p>Variables\n"],["PrincipalScreen","","PrincipalScreen.html","","<p>Presentation\n<p>PrincipalScreen is an inherited class from the Screen class. This class only needs to be …\n"],["Probleme","","Probleme.html","","<p>Presentation\n<p>Probleme only needs to be initialized. It creates and implements a pop-up to tell you the …\n"],["ProblemeIdent","","ProblemeIdent.html","","<p>Presentation\n<p>ProblemeIdent only needs to be initialized. It creates and implements a pop up to tell you …\n"],["ProcessStatus","","ProcessStatus.html","","<p>Presentation\n<p>The ProcessStatus class is the representation of the design pattern observator. It gives …\n"],["QuickPlaySession","","QuickPlaySession.html","","<p>Presentation\n<p>The QuickPlaySession class is inherited from the class Session and represents a game in quick …\n"],["RowsAndColumnsFindGrass","","RowsAndColumnsFindGrass.html","","<p>Presentation\n<p>The RowsAndColumnsFindGrass class is a helper class inherited from FictivHelper. Its role …\n"],["RowsAndColumnsFindTent","","RowsAndColumnsFindTent.html","","<p>Presentation\n<p>The RowsAndColumnsFindTent class is a helper class inherited from FictivHelper. Its role …\n"],["RowsAndColumnsGrassHelper","","RowsAndColumnsGrassHelper.html","","<p>Presentation\n<p>The RowsAndColumnsGrassHelper class is a helper class inherited from FictivHelper. Its role …\n"],["RowsAndColumnsTentsHelper","","RowsAndColumnsTentsHelper.html","","<p>Presentation\n<p>The RowsAndColumnsTentsHelper class is a helper class inherited from FictivHelper. Its role …\n"],["RuleScreen","","RuleScreen.html","","<p>Presentation\n<p>RuleScreen is an inherited class from the Screen class. This class only needs to be initialized …\n"],["Save","","Save.html","","<p>Presentation\n<p>This class represents a Save within the game.\n<p>Variables\n"],["SaveBlockUi","","SaveBlockUi.html","","<p>Presentation\n<p>SaveblockUi is an inherited class from the gtkBox. It creates and implements the save block …\n"],["SaveDB","","SaveDB.html","","<p>Presentation\n<p>The SaveDB class is here to represent a Save in the database.\n<p>Variables\n"],["SaveScreen","","SaveScreen.html","","<p>Presentation\n<p>SaveScreen is an inherited class from the Screen class. This class only needs to be initialized. …\n"],["Screen","","Screen.html","","<p>404\n<p>This class was not commented in the first place, so it can not be documented.\n"],["ScrollableArea","","ScrollableArea.html","","<p>Presentation\n<p>This class creates and implements a scrollable area in a page.\n<p>Methods\n"],["SelectionUi","","SelectionUi.html","","<p>404\n<p>This class was not commented in the first place, so it can not be documented.\n"],["Session","","Session.html","","<p>Presentation\n<p>The Session class implements everything about a game session in the game.\n<p>Variables\n"],["Star","","Star.html","","<p>Presentation\n<p>The Star class creates and implements all the stars&#39; icons of the game.\n<p>Methods\n"],["TestGame","","TestGame.html","","<p>404\n<p>This class was not commented in the first place, so it can not be documented.\n"],["Text","","Text.html","","<p>404\n<p>This class was not commented in the first place, so it can not be documented.\n"],["TimeAttackSession","","TimeAttackSession.html","","<p>Presentation\n<p>The TimeAttackSession class is inherited from the class Session and represents a time attack …\n"],["TutorialGameScreen","","TutorialGameScreen.html","","<p>Presentation\n<p>The tutorialGameScreen class is inherited from Screen. Its role is to show the tutorial screen. …\n"],["TutorialSession","","TutorialSession.html","","<p>Presentation\n<p>The TutorialSession class is inherited from the Session class.\n<p>Variables\n"],["TutorialVictoryScreen","","TutorialVictoryScreen.html","","<p>404\n<p>This class was not commented in the first place, so it can not be documented.\n"],["UiManager","","UiManager.html","","<p>404\n<p>This class was not commented in the first place, so it can not be documented.\n"],["VictoryScreen","","VictoryScreen.html","","<p>404\n<p>This class was not commented in the first place, so it can not be documented.\n"],["XmlReader","","XmlReader.html","","<p>Presentation\n<p>The XmlReader class is here to read every necessary information inside the XML file. The …\n"],["==","Cell","Cell.html#method-i-3D-3D","(otherCell)","<p>Presentation\n<p>The == method is used to compare two cells, it returns true if the cells&#39; states are …\n"],["==","Grid","Grid.html#method-i-3D-3D","(otherGrid)","<p>Presentation\n<p>The == boolean method compares two grids and returns true if the grids are equal.\n<p>Parameters …\n"],["==","Help","Help.html#method-i-3D-3D","(otherHelp)","<p>Presentation\n<p>This method is a redefinition of the == method.\n<p>Returns\n"],["==","HelpCellsAndRowsOrColumns","HelpCellsAndRowsOrColumns.html#method-i-3D-3D","(otherHelp)","<p>Presentation\n<p>This method is a redefinition of this method in the Help class.\n<p>Attributes\n"],["==","HelpOn2Cells","HelpOn2Cells.html#method-i-3D-3D","(otherHelp)","<p>Presentation\n<p>The == method overrides the == method in HelpOnCells. It is here to compare this object with …\n"],["==","HelpOn3Cells","HelpOn3Cells.html#method-i-3D-3D","(otherHelp)","<p>Presentation\n<p>The == method overrides the == method in HelpOnCells. It is here to compare this object with …\n"],["==","HelpOnCells","HelpOnCells.html#method-i-3D-3D","(otherHelp)","<p>Presentation\n<p>This method compares this help with another one.\n<p>Parameters\n"],["==","HelpOnRowsAndColumn","HelpOnRowsAndColumn.html#method-i-3D-3D","(otherHelp)","<p>Presentation\n<p>The == method compares this help with another one.\n<p>Parameters\n"],["add","Moves","Moves.html#method-i-add","(move)","<p>Presentation\n<p>Adds a move to the “moves” stack and clears the redo stack.\n<p>Arguments\n"],["add","ProcessStatus","ProcessStatus.html#method-c-add","(o)","<p>Presentation\n<p>This class method adds a new object to notify.\n<p>Variables\n"],["add","ScrollableArea","ScrollableArea.html#method-i-add","(widget,pad=0)","<p>Presentation\n<p>This method will add a widget to the scrollable area.\n<p>Attributes\n"],["addHighScore","ConnectDB","ConnectDB.html#method-i-addHighScore","(gameMode, difficulty, player, score)","<p>Presentation\n<p>When the player has not already done a high score in the given game mode and difficulty this …\n"],["applyOn","Asset","Asset.html#method-i-applyOn","(widget)","<p>Presentation\n<p>The applyOn method puts an image on a widget.\n<p>Atrributes\n"],["applyOn","LevelSelectionScreen","LevelSelectionScreen.html#method-i-applyOn","(widget)","<p>Presentation\n<p>This method is used to refresh the page by calling the method refresh of the class LevelNumbers …\n"],["biRotative?","Cell","Cell.html#method-i-biRotative-3F","()","<p>Presentation\n<p>The biRotative? is an alias method to the isATree? method. It returns true if the cell&#39;s …\n"],["buttonMaxString","XmlReader","XmlReader.html#method-i-buttonMaxString","(currentScreen)","<p>Presentation\n<p>The buttonMaxString method returns the length of the longest label of a button on a screen. …\n"],["calculateOverallStars","AdventureSession","AdventureSession.html#method-i-calculateOverallStars","()","<p>Presentation\n<p>This method is used when the player ends a game. This is used to calculate the overallstars …\n"],["calculateOverallStars","Levels","Levels.html#method-i-calculateOverallStars","(overAllStarsHash)","<p>Presentation\n<p>This method is used when the player ends a game. This is used to calculate the overall stars …\n"],["calculateScore","AdventureSession","AdventureSession.html#method-i-calculateScore","(score)","<p>Presentation\n<p>This method is used when the player ends a game. This is used to calculate the score with …\n"],["calculateScore","Levels","Levels.html#method-i-calculateScore","(scoreMultiplier, numberOfGrid,score)","<p>Presentation\n<p>This method is used when the player ends a game. This is used to calculate the score with …\n"],["calculateScore","QuickPlaySession","QuickPlaySession.html#method-i-calculateScore","()","<p>Presentation\n<p>This method redefines the calculateScore method from Session in order to calculate the session&#39;s …\n"],["calculateScore","Session","Session.html#method-i-calculateScore","()","<p>Presentation\n<p>This method calculates the score.\n"],["calculateScore","TimeAttackSession","TimeAttackSession.html#method-i-calculateScore","()","<p>Presentation\n<p>This method calculates the score of the session by using @game.\n"],["calculateScore","TutorialSession","TutorialSession.html#method-i-calculateScore","()","<p>Presentation\n<p>This method redefines the method calculateScore from Session .\n"],["calculateStars","AdventureSession","AdventureSession.html#method-i-calculateStars","()","<p>Presentation\n<p>This method is used when the player ends a game. This is used to calculate the number of …\n"],["calculateStars","Levels","Levels.html#method-i-calculateStars","(score, maxStars,overAllStarsHash,levelNumber)","<p>Presentation\n<p>This method is used when the player ends a game. This is used to calculate the number of …\n"],["cellAt","Grid","Grid.html#method-i-cellAt","(row, col)","<p>Presentation\n<p>The cellAt method returns the cell with the coordinates taken in parameters.\n<p>Attributes\n"],["cellsList","Help","Help.html#method-i-cellsList","(helpLevel)","<p>Presentation\n<p>This method returns an array with all the important cells for the help.\n"],["cellsList","HelpCellsAndColumns","HelpCellsAndColumns.html#method-i-cellsList","(helpLevel)","<p>Presentation\n<p>The cellsList method is a redefinition from the Help class.\n<p>Attributes\n"],["cellsList","HelpCellsAndRows","HelpCellsAndRows.html#method-i-cellsList","(helpLevel)","<p>Presentation\n<p>This method overrides the cellsList method from the HelpCellsAndRowsOrColumns class.\n<p>Attributes …\n"],["cellsList","HelpCellsAndRowsOrColumns","HelpCellsAndRowsOrColumns.html#method-i-cellsList","(helpLevel)","<p>Presentation\n<p>The cellsList method is a redefinition from cellsList method in the Help class.\n<p>Attributes …\n"],["cellsList","HelpOn2Cells","HelpOn2Cells.html#method-i-cellsList","(helpLevel)","<p>Presentation\n<p>The cellsList method from this class overrides this method from the HelpOnCells class.\n<p>Attributes …\n"],["cellsList","HelpOn3Cells","HelpOn3Cells.html#method-i-cellsList","(helpLevel)","<p>Presentation\n<p>The cellsList method from this class overrides this method from the HelpOnCells class.\n<p>Attributes …\n"],["cellsList","HelpOnAColumn","HelpOnAColumn.html#method-i-cellsList","(helpLevel)","<p>Presentation\n<p>The cellsList method from this class overrides this method from the HelpOnRowsAndColumn class. …\n"],["cellsList","HelpOnCells","HelpOnCells.html#method-i-cellsList","(helpLevel)","<p>Presentation\n<p>This method adds to the help list the value of the cell.\n<p>Parameters\n"],["cellsList","HelpOneRow","HelpOneRow.html#method-i-cellsList","(helpLevel)","<p>Presentation\n<p>The cellsList method from this class overrides this method from the HelpOnRowsAndColumn class. …\n"],["clearRedo","Moves","Moves.html#method-i-clearRedo","()","<p>Presentation\n<p>This method clears the redo stack.\n"],["compresse","CompresseGrid","CompresseGrid.html#method-c-compresse","(game)","<p>Presentation\n<p>This class method counts the number of cells who are in a certain state inside a row or column. …\n"],["connexion","Connexion","Connexion.html#method-c-connexion","(player)","<p>Presentation\n<p>This method connects the player to the game.\n<p>Attributes\n"],["continuable?","AdventureSession","AdventureSession.html#method-i-continuable-3F","()","<p>Presentation\n<p>This method is used to know if a level can be continued.\n<p>Returns\n"],["continuable?","Levels","Levels.html#method-i-continuable-3F","(numberOfGrid)","<p>Presentation\n<p>This method is used to know if a level can be continued.\n<p>Returns\n"],["continuable?","Session","Session.html#method-i-continuable-3F","()","<p>Presentation\n<p>This method tells if a session can be continued.\n"],["continuable?","TimeAttackSession","TimeAttackSession.html#method-i-continuable-3F","()","<p>Presentation\n<p>This method redefines the continuable? method from the Session class in order to tell if …\n"],["continuable?","TutorialSession","TutorialSession.html#method-i-continuable-3F","()","<p>Presentation\n<p>This method redefines the continuable? method from Session in order to make the game continuable. …\n"],["copyFrozen","Grid","Grid.html#method-i-copyFrozen","()","<p>Presentation\n<p>The copyFrozen method creates a new grid that will have all the non-empty cells frozen in …\n"],["count","Count","Count.html#method-c-count","(game, state, vertHor, rank)","<p>Presentation\n<p>This class method counts the number of cells who are in a certain state inside a row or column. …\n"],["createPlayer","ConnectDB","ConnectDB.html#method-i-createPlayer","(name, password)","<p>Presentation\n<p>This method adds a player in the database with the name and the password provided. The game …\n"],["createSave","Session","Session.html#method-i-createSave","()","<p>Presentation\n<p>This method creates a Save linked to the Session and adds it to the database.\n<p>Examples\n"],["deletePlayer","ConnectDB","ConnectDB.html#method-i-deletePlayer","(id)","<p>Presentation\n<p>This method deletes a player in the database with the ID of the player. The game must be …\n"],["deletePlayerHg","ConnectDB","ConnectDB.html#method-i-deletePlayerHg","(id)","<p>Presentation\n<p>This method deletes a player&#39;s highscore in the database with the ID of the player.  …\n"],["deletePlayerSave","ConnectDB","ConnectDB.html#method-i-deletePlayerSave","(id)","<p>Presentation\n<p>This method deletes all of the player&#39;s saves in the database with the ID of the player. …\n"],["deleteSave","ConnectDB","ConnectDB.html#method-i-deleteSave","(id)","<p>Presentation\n<p>This method deletes a Save in the database with the ID of the Save. The game must be connected …\n"],["deleteSave","Session","Session.html#method-i-deleteSave","()","<p>Presentation\n<p>This method deletes the linked save from the database, calling the method from ConnectDB …\n"],["destroy","Save","Save.html#method-i-destroy","()","<p>Presentation\n<p>This class destroys a Save from the database.\n"],["dragLeftChange","Cell","Cell.html#method-i-dragLeftChange","()","<p>Presentation\n<p>The dragLeftChange method is a boolean method that returns false if the cell is frozen.  …\n"],["each","Grid","Grid.html#method-i-each","()","<p>Presentation\n<p>The each method goes through the grid&#39;s rows.\n"],["find","FindWhiteZone","FindWhiteZone.html#method-c-find","(game, vertHor, rank)","<p>Presentation\n<p>This class method is used in order to help the other help classes by finding white cells …\n"],["findFirst","Count","Count.html#method-c-findFirst","(game, state, vertHor, rank)","<p>Presentation\n<p>This class method finds the first cell who is in a certain state inside a row or column. …\n"],["frozenOf","Cell","Cell.html#method-i-frozenOf","(cell)","<p>Presentation\n<p>This method returns the frozen state of a cell.\n<p>Parameters\n"],["getButtonLabel","XmlReader","XmlReader.html#method-i-getButtonLabel","(currentScreen, key)","<p>Presentation\n<p>The getButtonLabel method fetches the label of a button according to the current screen and …\n"],["getHelpsTexts","XmlReader","XmlReader.html#method-i-getHelpsTexts","(help, helpLevel, delimiterPosition)","<p>Presentation\n<p>The getHelpTexts method fetches a text according to a key and the position of a delimiter …\n"],["getHighScoresByGamemodeDiff","ConnectDB","ConnectDB.html#method-i-getHighScoresByGamemodeDiff","(gamemode, difficulty)","<p>Presentation\n<p>This method retrieves the high scores by game mode and difficulty. The game must be connected …\n"],["getJoueur","Connexion","Connexion.html#method-c-getJoueur","()","<p>Presentation\n<p>This method gives the connected player.\n<p>Returns\n"],["getLanguages","XmlReader","XmlReader.html#method-i-getLanguages","()","<p>Presentation\n<p>The getLanguages method returns an array filled with the content of lang.xml.\n"],["getLevel","AdventureSession","AdventureSession.html#method-i-getLevel","(lvlNumber)","<p>Presentation\n<p>This method is used when the player wants to play a level in the adventure.\n<p>Attributes\n"],["getLevel","Levels","Levels.html#method-i-getLevel","(level)","<p>Presentation\n<p>This method is used when the player wants to play a level in the adventure.\n<p>Attributes\n"],["getLevelInformation","AdventureSession","AdventureSession.html#method-i-getLevelInformation","(lvlNumber)","<p>Presentation\n<p>This method is used when the player wants to play a level in the adventure. This is here …\n"],["getLevelMaxStars","Levels","Levels.html#method-i-getLevelMaxStars","(lvl)","<p>Presentation\n<p>This method is used to know the maximal number of stars for a level.\n<p>Attributes\n"],["getLoadingMessages","XmlReader","XmlReader.html#method-i-getLoadingMessages","(key)","<p>Presentation\n<p>The getLoadingMessages method fetches a loading text message according to the key.\n"],["getPlayer","ConnectDB","ConnectDB.html#method-i-getPlayer","(id)","<p>Presentation\n<p>This method retrieves the Player that matches the given id. The game must be connected to …\n"],["getPlayerHighScoreByGamemodeDiff","ConnectDB","ConnectDB.html#method-i-getPlayerHighScoreByGamemodeDiff","(gamemode, difficulty, player)","<p>Presentation\n<p>This method retrieves the high score by game mode and difficulty made by a given player. …\n"],["getPlayersSave","ConnectDB","ConnectDB.html#method-i-getPlayersSave","(player)","<p>Presentation\n<p>This method retrieves all the saves created by the Player. The game must be connected to …\n"],["getRes","Help","Help.html#method-i-getRes","(helpLevel)","<p>Presentation\n<p>This method returns the UI printable form of the help.\n"],["getRules","XmlReader","XmlReader.html#method-i-getRules","(number)","<p>Presentation\n<p>The getRules method fetches the rules according to a number.\n"],["getSaveByID","ConnectDB","ConnectDB.html#method-i-getSaveByID","(id)","<p>Presentation\n<p>This method retrieves the save from the provided ID. The game must be connected to the database. …\n"],["getScreenTexts","XmlReader","XmlReader.html#method-i-getScreenTexts","(currentScreen, key)","<p>Presentation\n<p>The getScreenTexts method fetches a text according to the current screen and its key.\n"],["getText","Help","Help.html#method-i-getText","(helpLevel)","<p>Presentation\n<p>This method fetches the help text for a given help level. It is used to initialize the <code>helpText</code> …\n"],["getText","HelpAllGrassOnAColumn","HelpAllGrassOnAColumn.html#method-i-getText","(helpLevel)","<p>Presentation\n<p>This method fetches the text from the XML file to show the help text.\n<p>Parameters\n"],["getText","HelpAllGrassOnARow","HelpAllGrassOnARow.html#method-i-getText","(helpLevel)","<p>Presentation\n<p>This method fetches the text from the XML file to show the help text.\n<p>Parameters\n"],["getText","HelpAllPossibilitiesGiveItColumn","HelpAllPossibilitiesGiveItColumn.html#method-i-getText","(helpLevel)","<p>Presentation\n<p>The getText method sends the help text the player will see.\n<p>Attributes\n"],["getText","HelpAllPossibilitiesGiveItRow","HelpAllPossibilitiesGiveItRow.html#method-i-getText","(helpLevel)","<p>Presentation\n<p>The getText method sends the help text the player will see. It returns the helpText variable …\n"],["getText","HelpAllTentsOnAColumn","HelpAllTentsOnAColumn.html#method-i-getText","(helpLevel)","<p>Presentation\n<p>This method fetches the text from the XML file to show the help text.\n<p>Parameters\n"],["getText","HelpAllTentsOnARow","HelpAllTentsOnARow.html#method-i-getText","(helpLevel)","<p>Presentation\n<p>This method fetches the text from the XML file to show the help text.\n<p>Parameters\n"],["getText","HelpCellTooFarOfTrees","HelpCellTooFarOfTrees.html#method-i-getText","(helpLevel)","<p>Presentation\n<p>The getText method returns the help text saying that the cell must be grass. This text is …\n"],["getText","HelpNotFound","HelpNotFound.html#method-i-getText","(helpLevel)","<p>Presentation\n<p>This method is a redefinition of the getText method in the Help class.\n<p>Returns\n"],["getText","HelpOnACellTouchATent","HelpOnACellTouchATent.html#method-i-getText","(helpLevel)","<p>Presentation\n<p>This method fetches the text from the XML file to show the help text.\n<p>Parameters\n"],["getText","HelpsOn2CellTentUniqueSolution","HelpsOn2CellTentUniqueSolution.html#method-i-getText","(helpLevel)","<p>Presentation\n<p>This method fetches the text from the XML file to show the help text.\n<p>Attributes\n"],["getText","HelpsOn2CellsGrassLinkedTree","HelpsOn2CellsGrassLinkedTree.html#method-i-getText","(helpLevel)","<p>Presentation\n<p>This method fetches the text from the XML file to show the help text.\n<p>Parameters\n"],["getText","HelpsOnACellIsTentBecauseOfTree","HelpsOnACellIsTentBecauseOfTree.html#method-i-getText","(helpLevel)","<p>Presentation\n<p>This method fetches the text from the XML file to show the help text.\n<p>Parameters\n"],["getText","HelpsOnACellOverlap","HelpsOnACellOverlap.html#method-i-getText","(helpLevel)","<p>Presentation\n<p>This method fetches the text from the XML file to show the help text.\n<p>Parameters\n"],["getTutorialTexts","XmlReader","XmlReader.html#method-i-getTutorialTexts","(currentLevel, step)","<p>Presentation\n<p>The getTutorialTexts method fetches a text according to the current tutorial level and its …\n"],["getVisualRankColumn","Cell","Cell.html#method-i-getVisualRankColumn","()","<p>Presentation\n<p>This method is used to fetch the visual rank for a column.\n<p>Returns\n"],["getVisualRankRow","Cell","Cell.html#method-i-getVisualRankRow","()","<p>Presentation\n<p>This method is used to fetch the visual rank for a row.\n<p>Returns\n"],["goToNextStep","TutorialGameScreen","TutorialGameScreen.html#method-i-goToNextStep","()","<p>Presentation\n<p>This method lets us go to the next tutorial step.\n<p>How to use\n"],["gridAltered","TutorialGameScreen","TutorialGameScreen.html#method-i-gridAltered","()","<p>Presentation\n<p>This method is called when the grid is altered.\n<p>How to use\n"],["help","AllTreesHaveTentsHelper","AllTreesHaveTentsHelper.html#method-i-help","(game)","<p>Presentation\n<p>This method tries to create network of tents and trees in order to find the emplacement of …\n"],["help","CellDontTouchTreeHelper","CellDontTouchTreeHelper.html#method-i-help","(game)","<p>Presentation\n<p>This method tries to find a cell that is not touched by a tree.\n<p>Attributes\n"],["help","CellTouchATentHelper","CellTouchATentHelper.html#method-i-help","(game)","<p>Presentation\n<p>This method tries to find a cell touched by a tent.\n<p>Attributes\n"],["help","CellWhiteOverlap","CellWhiteOverlap.html#method-i-help","(game)","<p>Presentation\n<p>This method finds trees and checks if they have only two positions for its tent and if those …\n"],["help","FictivHelper","FictivHelper.html#method-i-help","(game)","<p>Presentation\n<p>This method helps the player but needs to be defined in the helper class.\n<p>Attributes\n"],["help","Helper","Helper.html#method-i-help","(game)","<p>Presentation\n<p>This method returns the help found to help the player.\n<p>Attributes\n"],["help","RowsAndColumnsFindGrass","RowsAndColumnsFindGrass.html#method-i-help","(game)","<p>Presentation\n<p>This method tries to find a cell whitch is grass beacause of its row/column, or a near one. …\n"],["help","RowsAndColumnsFindTent","RowsAndColumnsFindTent.html#method-i-help","(game)","<p>Presentation\n<p>This method tries to find a cell whitch is a tent because of its row/column, or a near one. …\n"],["help","RowsAndColumnsGrassHelper","RowsAndColumnsGrassHelper.html#method-i-help","(game)","<p>Presentation\n<p>This method tries to find whitch row or column you can fill with grass.\n<p>Attributes\n"],["help","RowsAndColumnsTentsHelper","RowsAndColumnsTentsHelper.html#method-i-help","(game)","<p>Presentation\n<p>This method tries to find whitch row or column you can fill with tents.\n<p>Attributes\n"],["helpDisplayed?","TutorialGameScreen","TutorialGameScreen.html#method-i-helpDisplayed-3F","()","<p>Presentation\n<p>This method returns true if help has been displayed.\n<p>Return\n"],["helpFound?","Help","Help.html#method-i-helpFound-3F","()","<p>Presentation\n<p>This tries to find the necessary help.\n<p>Returns\n"],["helpFound?","HelpNotFound","HelpNotFound.html#method-i-helpFound-3F","()","<p>Presentation\n<p>This method is a redefinition of the helpFound? method in the Help class.\n<p>Returns\n"],["iconAsset","IconAsset","IconAsset.html#method-i-iconAsset","(state)","<p>Presentation\n<p>The iconAsset method fetches the different icons assets.\n<p>Arguments\n"],["initLevel","Levels","Levels.html#method-i-initLevel","(level)","<p>Presentation\n<p>This method is used when the player wants to play a level in the adventure.\n<p>Attributes\n"],["isAGrass?","Cell","Cell.html#method-i-isAGrass-3F","()","<p>Presentation\n<p>The isAGrass? method returns true if the cell&#39;s state is grass.\n"],["isATent?","Cell","Cell.html#method-i-isATent-3F","()","<p>Presentation\n<p>The isATent? method returns true if the cell&#39;s state is a tent.\n"],["isATree?","Cell","Cell.html#method-i-isATree-3F","()",""],["isAWhite?","Cell","Cell.html#method-i-isAWhite-3F","()","<p>Presentation\n<p>The isAWhite? method returns true if the cell&#39;s state is white.\n"],["isPlayerExist","ConnectDB","ConnectDB.html#method-i-isPlayerExist","(name)","<p>Presentation\n<p>This method checks if the name of the Player already exists in the database The game must …\n"],["isTutorial?","QuickPlaySession","QuickPlaySession.html#method-i-isTutorial-3F","()","<p>Presentation\n<p>This method redefines the isTutorial? method from the Session class in order to define this …\n"],["isTutorial?","Session","Session.html#method-i-isTutorial-3F","()","<p>Presentation\n<p>This method returns true if the session is a tutorial level, false otherwise.\n"],["isTutorial?","TutorialSession","TutorialSession.html#method-i-isTutorial-3F","()","<p>Presentation\n<p>This method redefines the isTutorial? method from the Session class in order to define this …\n"],["load","Save","Save.html#method-c-load","(id)","<p>Presentation\n<p>This class method allows the loading of a Session, without having to create a Save.\n<p>Attributes …\n"],["load","Save","Save.html#method-i-load","()","<p>Presentation\n<p>This class allows the loading of the Session, from within a Save object.\n<p>Attributes\n"],["lvlAvailable?","AdventureSession","AdventureSession.html#method-i-lvlAvailable-3F","(lvl)","<p>Presentation\n<p>This method is used to know if a player can access a level.\n<p>Returns\n"],["lvlAvailable?","Levels","Levels.html#method-i-lvlAvailable-3F","(lvl, overAllStars)","<p>Presentation\n<p>This method is used to know if a player can access a level.\n<p>Attributes\n"],["new","AdventureSession","AdventureSession.html#method-c-new","()","<p>Presentation\n<p>This class&#39; constructor calls the inherited constructor from Session and defines the …\n"],["new","Asset","Asset.html#method-c-new","(file)","<p>Presentation\n<p>The class&#39; constructor.\n<p>Attributes\n"],["new","Button","Button.html#method-c-new","(orientation, label)","<p>Presentation\n<p>This method initializes the button&#39;s variables in order to act properly.\n<p>Attributes\n"],["new","Cell","Cell.html#method-c-new","(args={state: :white, frozen: false, row: 0, column: 0})","<p>Presentation\n<p>The class&#39; constructor, it is here to give the variables their value taken from the parameters. …\n"],["new","ChronoUi","ChronoUi.html#method-c-new","(time)","<p>Presentation\n<p>The initialization method creates a new button with specific values for the chronometer&#39;s …\n"],["new","ConnectDB","ConnectDB.html#method-c-new","()","<p>Presentation\n<p>This class&#39; constructor initializes the db variable with the database in order to connect …\n"],["new","Connexion","Connexion.html#method-c-new","()","<p>Presentation\n<p>This method initializes the connection&#39;s screen.\n<p>How to use\n"],["new","Difficulty","Difficulty.html#method-c-new","(id, name)","<p>Presentation\n<p>The class&#39; constructor. It only gives the variables the value taken in parameters.\n<p>Attributes …\n"],["new","GameDivised","GameDivised.html#method-c-new","(game)","<p>Presentation\n<p>This class&#39; constructor initializes the tree, tent, grass and white variables with the …\n"],["new","Gamemode","Gamemode.html#method-c-new","(id, name)","<p>Presentation\n<p>The class&#39; constructor. It only gives the id and name variables their value, taken from …\n"],["new","Grid","Grid.html#method-c-new","(nRow, nCol, gridAnswers, withAnswers=false)","<p>Presentation\n<p>This method is the class&#39; constructor. It initializes the grid.\n<p>Attributes\n"],["new","Help","Help.html#method-c-new","()","<p>Presentation\n<p>The class&#39; constructor. This method takes no parameters and initializes two variables …\n"],["new","HelpAllPossibilitiesGiveItColumn","HelpAllPossibilitiesGiveItColumn.html#method-c-new","(cell, column, state)","<p>Presentation\n<p>The initialize method gives to the state variable a value from the method&#39;s parameters …\n"],["new","HelpAllPossibilitiesGiveItRow","HelpAllPossibilitiesGiveItRow.html#method-c-new","(cell, row, state)","<p>Presentation\n<p>The initialize method gives to the state variable a value from the method&#39;s parameters …\n"],["new","HelpCellTooFarOfTrees","HelpCellTooFarOfTrees.html#method-c-new","(cell)","<p>Presentation\n<p>The initialize method just calls the initialize method from HelpOn1Cell with the cell taken …\n"],["new","HelpCellsAndColumns","HelpCellsAndColumns.html#method-c-new","(cell, column)","<p>Presentation\n<p>This method only does what the initialize method in HelpCellsAndRowsOrColumns does, but with …\n"],["new","HelpCellsAndRows","HelpCellsAndRows.html#method-c-new","(cell, row)","<p>Presentation\n<p>This method only does what the initialize method in HelpCellsAndRowsOrColumns does, but with …\n"],["new","HelpCellsAndRowsOrColumns","HelpCellsAndRowsOrColumns.html#method-c-new","(cell, rowOrColumn)","<p>Presentation\n<p>This class&#39; constructor needs 2 attributes and instanciates 3 variables.\n<p>Attributes\n"],["new","HelpNotFound","HelpNotFound.html#method-c-new","()","<p>Presentation\n<p>The class&#39; constructor calls the constructor from the parent class.\n"],["new","HelpOn2Cells","HelpOn2Cells.html#method-c-new","(cell1, cell2)","<p>Presentation\n<p>This class&#39; constructor initializes the two variables taken in attributes as described …\n"],["new","HelpOn3Cells","HelpOn3Cells.html#method-c-new","(cell1, cell2, cell3)","<p>Presentation\n<p>This class&#39; constructor initializes the three variables taken in attributes as described …\n"],["new","HelpOnACellTouchATent","HelpOnACellTouchATent.html#method-c-new","(cell, tentCell)","<p>Presentation\n<p>The class&#39; constructor that is here to initialize the two variables taken in parameters …\n"],["new","HelpOnCells","HelpOnCells.html#method-c-new","(cell)","<p>Presentation\n<p>This class&#39; constructor assigns a value to the @cell variable and calls constructor from …\n"],["new","HelpOnRowsAndColumn","HelpOnRowsAndColumn.html#method-c-new","(rowOrColumn)","<p>Presentation\n<p>This class&#39; constructor assigns a value to the @column and @row variables and calls the …\n"],["new","HelpsOn2CellTentUniqueSolution","HelpsOn2CellTentUniqueSolution.html#method-c-new","(cellTent, cellTree)","<p>Presentation\n<p>The class&#39; constructor, it initializes each cell variable with the cell taken in parameters. …\n"],["new","HelpsOn2CellsGrassLinkedTree","HelpsOn2CellsGrassLinkedTree.html#method-c-new","(cellTent, cellTree)","<p>Presentation\n<p>The class&#39; constructor that is here to initialize the two variables taken in parameters …\n"],["new","HelpsOnACellIsTentBecauseOfTree","HelpsOnACellIsTentBecauseOfTree.html#method-c-new","(cellTent, cellTree)","<p>Presentation\n<p>The class&#39; constructor that is here to initialize the two variables taken in parameters …\n"],["new","HelpsOnACellOverlap","HelpsOnACellOverlap.html#method-c-new","(cellGrass, cellwhite1, cellwhite2)","<p>Presentation\n<p>The class&#39; constructor that is here to initialize the three variables taken in parameters …\n"],["new","HighScore","HighScore.html#method-c-new","(idDiff, player, score, idMode)","<p>Presentation\n<p>This is the class&#39; constructor, it only gives the variables their value taken from the …\n"],["new","HighScoresScreen","HighScoresScreen.html#method-c-new","(manager)","<p>Presentation\n<p>This method is used to create the high scores screen by calling the class ConnectDB. All …\n"],["new","IconAsset","IconAsset.html#method-c-new","()","<p>Presentation\n<p>This method is used to load all the icons by putting them in a hash table <code>iconAsset</code>.\n"],["new","LevelNumber","LevelNumber.html#method-c-new","(i,manager,adventure, adventureInfo,ic)","<p>Presentation\n<p>This method is used to create the level icon. An icon contains a level number icon from the …\n"],["new","LevelNumbers","LevelNumbers.html#method-c-new","(manager,adventure ,adventureInfo,ic)","<p>Presentation\n<p>This method is used to create all the levels icons by calling the LevelNumber class. All …\n"],["new","LevelSelectionScreen","LevelSelectionScreen.html#method-c-new","(manager,ic)","<p>Presentation\n<p>This method is used to create the level selection by calling the class LevelNumbers. All …\n"],["new","Levels","Levels.html#method-c-new","()","<p>Presentation\n<p>This class&#39; constructor initializes the variables, 4 hash tables described below.\n<p>Variables …\n"],["new","MotdepasseOublie","MotdepasseOublie.html#method-c-new","()","<p>Presentation\n<p>This method is used to create the pop-up to redefine your password. All the other variables …\n"],["new","Moves","Moves.html#method-c-new","(moves = [])","<p>Presentation\n<p>The class&#39; constructor. It creates a new Moves object.\n<p>Arguments\n"],["new","Player","Player.html#method-c-new","(id, name, password)","<p>Presentation\n<p>The class&#39; constructor. It only gives the variables their value taken from the parameters. …\n"],["new","Probleme","Probleme.html#method-c-new","()","<p>Presentation\n<p>This method is used to create the pop-up to tell you the problem about the identification. …\n"],["new","ProblemeIdent","ProblemeIdent.html#method-c-new","()","<p>Presentation\n<p>This method is used to create the pop-up to tell you the problem about the identification. …\n"],["new","ProcessStatus","ProcessStatus.html#method-c-new","()","<p>Presentation\n<p>This class&#39; constructor initializes the class variables.\n"],["new","QuickPlaySession","QuickPlaySession.html#method-c-new","(difficulty, partOfAdventure=false)","<p>Presentation\n<p>This class&#39; constructor initializes the variable using the parental constructor of Session …\n"],["new","Save","Save.html#method-c-new","(session)","<p>Presentation\n<p>This class&#39; constructor initializes the variable @session.\n<p>Attributes\n"],["new","SaveBlockUi","SaveBlockUi.html#method-c-new","(manager,save, parent)","<p>Presentation\n<p>This method is used to create the Save block. All save blocks contain a number of save, a …\n"],["new","SaveDB","SaveDB.html#method-c-new","(id, player, date, content)","<p>Presentation\n<p>The class&#39; constructor. It only gives the variables their value taken from the parameters. …\n"],["new","SaveScreen","SaveScreen.html#method-c-new","(manager,joueur)","<p>Presentation\n<p>This method is used to create the save screen by calling the class SaveBlockUi. A scrollable …\n"],["new","ScrollableArea","ScrollableArea.html#method-c-new","(orientation)","<p>Presentation\n<p>This method is used to create the scrollable area by using a viewport. All of the other variables …\n"],["new","Session","Session.html#method-c-new","(gameMode, difficulty, partOfAdventure=false)","<p>Presentation\n<p>This class&#39; constructor initializes the variables <code>gameMode</code>, <code>difficulty</code> and <code>score</code> .\n<p>Attributes …\n"],["new","Star","Star.html#method-c-new","(nbEtoile,nbEtoileObtenu,ic)","<p>Presentation\n<p>This method is used to create all the stars&#39; icons. Icons are loaded thanks to iconAsset. …\n"],["new","TimeAttackSession","TimeAttackSession.html#method-c-new","(difficulty, partOfAdventure=false)","<p>Presentation\n<p>This class&#39; constructor initializes the variable using the parental constructor of Session …\n"],["new","TutorialGameScreen","TutorialGameScreen.html#method-c-new","(manager,game,cellAssets,victoryScreen)","<p>Presentation\n<p>This method initializes the TutorialGameScreen.\n<p>Attributes\n"],["new","TutorialSession","TutorialSession.html#method-c-new","()","<p>Presentation\n<p>This class&#39; constructor initializes the variables using the parental constructor of  …\n"],["new","XmlReader","XmlReader.html#method-c-new","()","<p>Presentation\n<p>The initialization method reads the XML document, which is converted into a hash table indented …\n"],["onClick","Button","Button.html#method-i-onClick","(block=nil)","<p>Presentation\n<p>The onClick method determins how a button acts when it is clicked or hovered.\n<p>Attributes\n"],["onDestroy","Probleme","Probleme.html#method-i-onDestroy","()","<p>Presentation\n<p>The onDestroy method makes the main window quit when it is closed.\n"],["onDestroy","ProblemeIdent","ProblemeIdent.html#method-i-onDestroy","()","<p>Presentation\n<p>The onDestroy method makes the main window quit when it is closed.\n"],["parce","ChronoUi","ChronoUi.html#method-i-parce","(time)","<p>Presentation\n<p>The parce method is needed for the initialization and for the label update. It gives the …\n"],["partOfAdventure?","Session","Session.html#method-i-partOfAdventure-3F","()","<p>Presentation\n<p>This method returns the variable <code>partOfAdventure</code>, in order to know if the session is an adventure. …\n"],["playerConnect","ConnectDB","ConnectDB.html#method-i-playerConnect","(name, password)","<p>This method tries to find the player in the database with the name and the password provided. The game …\n"],["playerUpdate","ConnectDB","ConnectDB.html#method-i-playerUpdate","(login, mdp)","<p>Presentation\n<p>This method is used when the player wants to update his/her password. When the player can&#39;t …\n"],["price","Help","Help.html#method-i-price","(helpLevel)","<p>Presentation\n<p>This method checks the price of a given help level.\n<p>Returns\n"],["price","Helper","Helper.html#method-i-price","()","<p>Presentation\n<p>This method returns the cost of the last help.\n<p>Returns\n"],["primaryChange","Cell","Cell.html#method-i-primaryChange","()","<p>Presentation\n<p>The primaryChange method is a boolean method returning false if the cell is frozen. This …\n"],["primaryUnchange","Cell","Cell.html#method-i-primaryUnchange","()","<p>Presentation\n<p>The primaryUnchange method uses the same system as the primaryChange method but is used in …\n"],["recive","ProcessStatus","ProcessStatus.html#method-i-recive","()","<p>Presentation\n<p>This method returns the actual status\n"],["redo","Moves","Moves.html#method-i-redo","()","<p>Presentation\n<p>This method redoes the last undo move (i.e replay it on the given game) and pushes it on …\n"],["refresh","LevelNumber","LevelNumber.html#method-i-refresh","(i,manager,adventure,adventureInfo)","<p>Presentation\n<p>This method is used to refresh the level icon. An icon contains a level number icon from …\n"],["refresh","LevelNumbers","LevelNumbers.html#method-i-refresh","(manager,adventure ,adventureInfo)","<p>Presentation\n<p>This method is used to refresh all the levels icons by calling the class LevelNumber.\n<p>Attributes …\n"],["refresh","Star","Star.html#method-i-refresh","(nbEtoile,nbEtoileObtenu)","<p>Presentation\n<p>This method is used to refresh all the star&#39;s icons.\n<p>Attributes\n"],["refreshOverAllStar","LevelSelectionScreen","LevelSelectionScreen.html#method-i-refreshOverAllStar","()","<p>Presentation\n<p>This method is used to refresh star&#39;s icons.\n<p>Return\n"],["replay","AdventureSession","AdventureSession.html#method-i-replay","(none)","<p>Presentation\n<p>This class has no reason to have a replay. Overwriting this method with nothing allows less …\n"],["replay","Moves","Moves.html#method-i-replay","(game)","<p>Presentation\n<p>The replay method replays each move on the given Game.\n<p>Arguments\n"],["replay","Session","Session.html#method-i-replay","(continue)","<p>Presentation\n<p>This method replays a game with the same parameters.\n<p>Attributes\n"],["require_all","Object","Object.html#method-i-require_all","(_dir)","<p>@Author: VAIDIE Camille &lt;CamilleVAIDIE&gt; @Date:   8-Mar-2019 @Email:  camille.vaidie.etu@univ-lemans.fr …\n"],["research","AllTreesHaveTentsHelper","AllTreesHaveTentsHelper.html#method-i-research","(cell, prevCell)","<p>Presentation\n<p>The research method covers the trees path when two trees are neighbours or have a tent in …\n"],["resize","Asset","Asset.html#method-i-resize","(width,height)","<p>Presentation\n<p>The resize method modifies the buffer to make it fit a certain size.\n<p>Attributes\n"],["send","ProcessStatus","ProcessStatus.html#method-c-send","(message)","<p>Presentation\n<p>This class method sends a message to all the objects inside observers.\n<p>Attributes\n"],["setFreezersOnClick","TutorialGameScreen","TutorialGameScreen.html#method-i-setFreezersOnClick","()","<p>Presentation\n<p>This method sets the hypothesis on click function.\n<p>How to use\n"],["setGridOnClick","TutorialGameScreen","TutorialGameScreen.html#method-i-setGridOnClick","()","<p>Presentation\n<p>This method sets the grid&#39;s cells on click function.\n<p>How to use\n"],["setHelpOnClick","TutorialGameScreen","TutorialGameScreen.html#method-i-setHelpOnClick","()","<p>Presentation\n<p>This method sets the help on click function.\n<p>How to use\n"],["setPauseOnClick","TutorialGameScreen","TutorialGameScreen.html#method-i-setPauseOnClick","()","<p>Presentation\n<p>This method sets the pause on click function.\n<p>How to use\n"],["setRedoOnClick","TutorialGameScreen","TutorialGameScreen.html#method-i-setRedoOnClick","()","<p>Presentation\n<p>This method sets the redo on click function.\n<p>How to use\n"],["setResetOnClick","TutorialGameScreen","TutorialGameScreen.html#method-i-setResetOnClick","()","<p>Presentation\n<p>This method sets the reset on click function.\n<p>How to use\n"],["setSave","Session","Session.html#method-i-setSave","(save)","<p>Presentation\n<p>This method links a Save to the Session.\n<p>Attributes\n"],["setTime","QuickPlaySession","QuickPlaySession.html#method-i-setTime","()","<p>Presentation\n<p>This method redefines the setTime method from Session in order to set the timer at 0.\n"],["setTime","Session","Session.html#method-i-setTime","()","<p>Presentation\n<p>This method sets the base time for the timer.\n"],["setTime","TimeAttackSession","TimeAttackSession.html#method-i-setTime","()","<p>Presentation\n<p>This method sets the time of the timer by using the time affected to each grid.\n"],["setTime","TutorialSession","TutorialSession.html#method-i-setTime","()","<p>Presentation\n<p>This method redefines the method setTime from Session in order to set the timer at a random …\n"],["setUndoOnClick","TutorialGameScreen","TutorialGameScreen.html#method-i-setUndoOnClick","()","<p>Presentation\n<p>This method sets the undo on click function.\n<p>How to use\n"],["show","Connexion","Connexion.html#method-c-show","()","<p>Presentation\n<p>This method shows the connection&#39;s window.\n<p>How to use\n"],["to_s","Cell","Cell.html#method-i-to_s","()","<p>Presentation\n<p>This method is overriding the to_s method to print a cell&#39;s coordinates in the terminal, …\n"],["to_s","Help","Help.html#method-i-to_s","()","<p>Presentation\n<p>This method a redefinition of the to_s method, used to print the help text.\n<p>Returns\n"],["undo","Moves","Moves.html#method-i-undo","()","<p>Presentation\n<p>This method undoes the last move (i.e replay it on the given game) and pushes it on the redo …\n"],["update","Save","Save.html#method-c-update","(session)","<p>Presentation\n<p>This class method updates an already existing Save with a Session.\n<p>Attributes\n"],["update","TutorialGameScreen","TutorialGameScreen.html#method-i-update","()","<p>Presentation\n<p>This method updates all the parents of the current screen, and the current itself.\n<p>How to …\n"],["updateHighScore","ConnectDB","ConnectDB.html#method-i-updateHighScore","(gameMode, difficulty, player, score)","<p>Presentation\n<p>When the player has already done a high score in the given game mode and difficulty, this …\n"],["updateLabel","Button","Button.html#method-i-updateLabel","(newLabel)","<p>Presentation\n<p>The updateLabel method updates the button label with the new value taken in parameters.\n<p>Attributes …\n"],["updateLabel","ChronoUi","ChronoUi.html#method-i-updateLabel","(time)","<p>Presentation\n<p>The updateLabel method updates the chronometer button&#39;s label in order to actualize it …\n"],["updateOverallStarsHash","AdventureSession","AdventureSession.html#method-i-updateOverallStarsHash","()","<p>Presentation\n<p>This method is used when the player ends a game. This is used to update the overAllStarsHash …\n"],["updateSave","ConnectDB","ConnectDB.html#method-i-updateSave","(content, id)","<p>Presentation\n<p>The updateSave method updates the current player&#39;s save in order to keep his/her progression …\n"],["updateSave","Session","Session.html#method-i-updateSave","()","<p>Presentation\n<p>This method updates the linked save from the database.\n"]]}}